#! /bin/bash

trap 'rm -f "$tmp"' EXIT
tmp=$(mktemp --suffix=.ko)

function read_builtin() {
        if [ -e "$1" ] ; then
                while read modname ; do
                        echo "kmod($(basename "$modname" | tr '-' '_'))"
                done < "$1"
        else
                echo "Builtin modules for $2 not available in $1" >&2
        fi
}

while read f; do
    test -e "$f" || continue
    is_module=""
    case "$f" in
    *.debug)
        continue
        ;;
    */usr/lib/modules/*/vmlinux | */usr/lib/modules/*/vmlinux.[gx]z | */usr/lib/modules/*/vmlinux.zst)
        version=${f%%/vmlinux*}
        version=${version##*/}
        echo "kernel-uname-r = $version"
        builtin="$(dirname $f)/modules.builtin"
        read_builtin "$builtin" "$f"
        flavor=${version##*-}
        ;;
    */boot/vmlinux-*)
        version=${f##*/vmlinux-}
        version=${version%.[gx]z}
        inst_prefix="$(dirname $f)"
        inst_prefix="$(dirname $inst_prefix)"
        echo "kernel-uname-r = $version"
        builtin="/lib/modules/$version/modules.builtin"
        [ -e "$inst_prefix/usr$builtin" ] && builtin="/usr$builtin"
        read_builtin "$inst_prefix$builtin" "$f"
        flavor=${version##*-}
        ;;
    */lib/modules/*/*.ko | */lib/modules/*/*.ko.[gx]z | */lib/modules/*/*.ko.zst)
        is_module="1"
        modname="${f%%.[gx]z}"
        modname="${modname%%.zst}"
        echo "kmod($(basename "$modname" | tr '-' '_'))"
        ;;
    *)
        continue
    esac
    unzip=""
    case "$f" in
    *.gz | */boot/vmlinuz*)
        unzip="gzip";;
    *.xz)
        unzip="xz";;
    *.zst)
        unzip="zstd";;
    esac
    if test -n "$unzip" && $unzip -cd "$f" >"$tmp"; then
        f=$tmp
    fi
    if test -z "$flavor" -a -n "$is_module" ; then
        version=$(/sbin/modinfo -F vermagic "$f")
        version=${version%% *}
        flavor=${version##*-}
    fi
    if test -z "$flavor"; then
        echo "warning: cannot determine kernel flavor from $(/sbin/modinfo -F vermagic "$f" 2>&1)" >&2
        continue
    fi
    for i in {,$RPM_BUILD_ROOT}{/usr,}/lib/modules/$version/build; do
            ksym_provides=$i/scripts/mod/ksym-provides
            [ -x "$ksym_provides" ] && break
    done
    if [ -x "$ksym_provides" ] ; then
            "$ksym_provides" $flavor $f
    else
            major=${version%%.*}
            sub=${version#*.}
            sub=${sub%%.*}
            if [ "$major" -gt 4 -o \( "$major" -eq 4 -a "$sub" -ge 10 \) ] ; then
                    echo "error: cannot determine ksym provides of $f - missing ksym-provides tool." >&2
            else
                    nm "$f" \
                            | sed -r -ne "s/^0*([0-9a-f]+) A __crc_(.+)/ksym($flavor:\\2) = \\1/p"
            fi
    fi
done \
| sort -u
